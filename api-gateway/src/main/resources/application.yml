server:
  port: 8081

spring:
  application:
    name: api-gateway
  # Propriedades do Redis atualizadas
  security:
    token:
      secret: ${API_SECURITY_TOKEN_SECRET}
  data:
    redis:
      host: redis
      port: 6379

  #Cloud Gateway
  cloud:
    gateway:
      routes:
        - id: user_route_create
          uri: lb://user-service
          predicates:
            - Path=/api/users
            - Method=POST
          order: 0

        - id: auth_route
          uri: lb://user-service
          predicates:
            - Path=/api/login
          order: 0

        - id: user_route_others
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          order: 1

        - id: email_route
          uri: lb://email-service
          predicates:
            - Path=/api/emails/**
          filters:
            - name: CircuitBreaker
              args:
                name: emailCircuitBreaker
                fallbackuri: forward:/fallback/emails
          order: 1
          
      circuitbreaker:
        resilience4j:
          enabled: true

#Eureka conn
eureka:
  client:
    service-url:
      defaultZone: http://discovery-service:8761/eureka/
  instance:
    hostname: localhost

#Circuit Breaker
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        failureRateThreshold: 50
        waitDurationInOpenState: 10000ms
        permittedNumberOfCallsInHalfOpenState: 5
    instances:
      userCircuitBreaker:
        baseConfig: default
      emailCircuitBreaker:
        baseConfig: default